{"ast":null,"code":"// Authentication service using Firebase Auth\nimport{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,onAuthStateChanged}from'firebase/auth';import{auth}from'../firebase/config';// Register a new user\nexport const registerUser=async(email,password)=>{try{const userCredential=await createUserWithEmailAndPassword(auth,email,password);return{success:true,user:userCredential.user,message:'Registration successful!'};}catch(error){console.error('Registration error:',error);return{success:false,message:getErrorMessage(error.code)};}};// Sign in existing user\nexport const signInUser=async(email,password)=>{try{const userCredential=await signInWithEmailAndPassword(auth,email,password);return{success:true,user:userCredential.user,message:'Login successful!'};}catch(error){console.error('Login error:',error);return{success:false,message:getErrorMessage(error.code)};}};// Sign out user\nexport const signOutUser=async()=>{try{await signOut(auth);return{success:true,message:'Logged out successfully!'};}catch(error){console.error('Logout error:',error);return{success:false,message:'Failed to logout'};}};// Listen to auth state changes\nexport const onAuthStateChange=callback=>{return onAuthStateChanged(auth,callback);};// Get current user\nexport const getCurrentUser=()=>{return auth.currentUser;};// Helper function to get user-friendly error messages\nconst getErrorMessage=errorCode=>{switch(errorCode){case'auth/email-already-in-use':return'This email is already registered. Please try logging in instead.';case'auth/weak-password':return'Password should be at least 6 characters.';case'auth/invalid-email':return'Please enter a valid email address.';case'auth/user-not-found':return'No account found with this email. Please register first.';case'auth/wrong-password':return'Incorrect password. Please try again.';case'auth/too-many-requests':return'Too many failed attempts. Please try again later.';default:return'An error occurred. Please try again.';}};export default{registerUser,signInUser,signOutUser,onAuthStateChange,getCurrentUser};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","auth","registerUser","email","password","userCredential","success","user","message","error","console","getErrorMessage","code","signInUser","signOutUser","onAuthStateChange","callback","getCurrentUser","currentUser","errorCode"],"sources":["/workspaces/hpair_deliverable2025/src/services/authService.js"],"sourcesContent":["// Authentication service using Firebase Auth\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged \n} from 'firebase/auth';\nimport { auth } from '../firebase/config';\n\n// Register a new user\nexport const registerUser = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return { \n      success: true, \n      user: userCredential.user,\n      message: 'Registration successful!' \n    };\n  } catch (error) {\n    console.error('Registration error:', error);\n    return { \n      success: false, \n      message: getErrorMessage(error.code) \n    };\n  }\n};\n\n// Sign in existing user\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return { \n      success: true, \n      user: userCredential.user,\n      message: 'Login successful!' \n    };\n  } catch (error) {\n    console.error('Login error:', error);\n    return { \n      success: false, \n      message: getErrorMessage(error.code) \n    };\n  }\n};\n\n// Sign out user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    return { success: true, message: 'Logged out successfully!' };\n  } catch (error) {\n    console.error('Logout error:', error);\n    return { success: false, message: 'Failed to logout' };\n  }\n};\n\n// Listen to auth state changes\nexport const onAuthStateChange = (callback) => {\n  return onAuthStateChanged(auth, callback);\n};\n\n// Get current user\nexport const getCurrentUser = () => {\n  return auth.currentUser;\n};\n\n// Helper function to get user-friendly error messages\nconst getErrorMessage = (errorCode) => {\n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'This email is already registered. Please try logging in instead.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email. Please register first.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    default:\n      return 'An error occurred. Please try again.';\n  }\n};\n\nexport default {\n  registerUser,\n  signInUser,\n  signOutUser,\n  onAuthStateChange,\n  getCurrentUser\n};\n"],"mappings":"AAAA;AACA,OACEA,8BAA8B,CAC9BC,0BAA0B,CAC1BC,OAAO,CACPC,kBAAkB,KACb,eAAe,CACtB,OAASC,IAAI,KAAQ,oBAAoB,CAEzC;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACrD,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAR,8BAA8B,CAACI,IAAI,CAAEE,KAAK,CAAEC,QAAQ,CAAC,CAClF,MAAO,CACLE,OAAO,CAAE,IAAI,CACbC,IAAI,CAAEF,cAAc,CAACE,IAAI,CACzBC,OAAO,CAAE,0BACX,CAAC,CACH,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,MAAO,CACLH,OAAO,CAAE,KAAK,CACdE,OAAO,CAAEG,eAAe,CAACF,KAAK,CAACG,IAAI,CACrC,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOV,KAAK,CAAEC,QAAQ,GAAK,CACnD,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAP,0BAA0B,CAACG,IAAI,CAAEE,KAAK,CAAEC,QAAQ,CAAC,CAC9E,MAAO,CACLE,OAAO,CAAE,IAAI,CACbC,IAAI,CAAEF,cAAc,CAACE,IAAI,CACzBC,OAAO,CAAE,mBACX,CAAC,CACH,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,MAAO,CACLH,OAAO,CAAE,KAAK,CACdE,OAAO,CAAEG,eAAe,CAACF,KAAK,CAACG,IAAI,CACrC,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,WAAW,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAf,OAAO,CAACE,IAAI,CAAC,CACnB,MAAO,CAAEK,OAAO,CAAE,IAAI,CAAEE,OAAO,CAAE,0BAA2B,CAAC,CAC/D,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,MAAO,CAAEH,OAAO,CAAE,KAAK,CAAEE,OAAO,CAAE,kBAAmB,CAAC,CACxD,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,iBAAiB,CAAIC,QAAQ,EAAK,CAC7C,MAAO,CAAAhB,kBAAkB,CAACC,IAAI,CAAEe,QAAQ,CAAC,CAC3C,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,MAAO,CAAAhB,IAAI,CAACiB,WAAW,CACzB,CAAC,CAED;AACA,KAAM,CAAAP,eAAe,CAAIQ,SAAS,EAAK,CACrC,OAAQA,SAAS,EACf,IAAK,2BAA2B,CAC9B,MAAO,kEAAkE,CAC3E,IAAK,oBAAoB,CACvB,MAAO,2CAA2C,CACpD,IAAK,oBAAoB,CACvB,MAAO,qCAAqC,CAC9C,IAAK,qBAAqB,CACxB,MAAO,0DAA0D,CACnE,IAAK,qBAAqB,CACxB,MAAO,uCAAuC,CAChD,IAAK,wBAAwB,CAC3B,MAAO,mDAAmD,CAC5D,QACE,MAAO,sCAAsC,CACjD,CACF,CAAC,CAED,cAAe,CACbjB,YAAY,CACZW,UAAU,CACVC,WAAW,CACXC,iBAAiB,CACjBE,cACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}