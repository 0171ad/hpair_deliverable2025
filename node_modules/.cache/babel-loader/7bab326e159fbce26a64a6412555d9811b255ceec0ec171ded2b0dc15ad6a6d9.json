{"ast":null,"code":"var _jsxFileName = \"/Users/natalia_mac/deliverable_hpair/src/components/MultiStepForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PersonalInfoStep from './steps/PersonalInfoStep';\nimport ContactInfoStep from './steps/ContactInfoStep';\nimport FileUploadStep from './steps/FileUploadStep';\nimport PreferencesStep from './steps/PreferencesStep';\nimport ReviewStep from './steps/ReviewStep';\nimport StepIndicator from './StepIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiStepForm = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({});\n  const steps = [{\n    id: 1,\n    title: 'Personal Info',\n    component: PersonalInfoStep\n  }, {\n    id: 2,\n    title: 'Contact Info',\n    component: ContactInfoStep\n  }, {\n    id: 3,\n    title: 'File Upload',\n    component: FileUploadStep\n  }, {\n    id: 4,\n    title: 'Preferences',\n    component: PreferencesStep\n  }, {\n    id: 5,\n    title: 'Review',\n    component: ReviewStep\n  }];\n  const validationSchemas = {\n    1: Yup.object({\n      firstName: Yup.string().required('First name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      dateOfBirth: Yup.date().required('Date of birth is required'),\n      gender: Yup.string().required('Gender is required')\n    }),\n    2: Yup.object({\n      email: Yup.string().email('Invalid email').required('Email is required'),\n      phone: Yup.string().required('Phone number is required'),\n      address: Yup.string().required('Address is required'),\n      city: Yup.string().required('City is required'),\n      country: Yup.string().required('Country is required')\n    }),\n    3: Yup.object({\n      // File validation will be handled in the component\n    }),\n    4: Yup.object({\n      newsletter: Yup.boolean(),\n      notifications: Yup.boolean(),\n      theme: Yup.string().required('Theme preference is required')\n    })\n  };\n  const handleNext = values => {\n    setFormData({\n      ...formData,\n      ...values\n    });\n    if (currentStep < steps.length) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n  const handleSubmit = values => {\n    const finalData = {\n      ...formData,\n      ...values\n    };\n    console.log('Form submitted:', finalData);\n    // TODO: Implement form submission\n    alert('Form submitted successfully! Check the console for data.');\n  };\n  const CurrentStepComponent = steps[currentStep - 1].component;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(StepIndicator, {\n        currentStep: currentStep,\n        steps: steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: formData,\n        validationSchema: validationSchemas[currentStep],\n        onSubmit: currentStep === steps.length ? handleSubmit : handleNext,\n        children: ({\n          values,\n          errors,\n          touched,\n          setFieldValue\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(CurrentStepComponent, {\n            values: values,\n            errors: errors,\n            touched: touched,\n            setFieldValue: setFieldValue,\n            formData: formData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [currentStep > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handlePrevious,\n              className: \"btn btn-secondary\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: currentStep === steps.length ? 'Submit' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiStepForm, \"mn7UcDLe4Gfeky0TIIZQK5vLdLU=\");\n_c = MultiStepForm;\nexport default MultiStepForm;\nvar _c;\n$RefreshReg$(_c, \"MultiStepForm\");","map":{"version":3,"names":["React","useState","Formik","Form","Yup","PersonalInfoStep","ContactInfoStep","FileUploadStep","PreferencesStep","ReviewStep","StepIndicator","jsxDEV","_jsxDEV","MultiStepForm","_s","currentStep","setCurrentStep","formData","setFormData","steps","id","title","component","validationSchemas","object","firstName","string","required","lastName","dateOfBirth","date","gender","email","phone","address","city","country","newsletter","boolean","notifications","theme","handleNext","values","length","handlePrevious","handleSubmit","finalData","console","log","alert","CurrentStepComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","errors","touched","setFieldValue","type","onClick","_c","$RefreshReg$"],"sources":["/Users/natalia_mac/deliverable_hpair/src/components/MultiStepForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PersonalInfoStep from './steps/PersonalInfoStep';\nimport ContactInfoStep from './steps/ContactInfoStep';\nimport FileUploadStep from './steps/FileUploadStep';\nimport PreferencesStep from './steps/PreferencesStep';\nimport ReviewStep from './steps/ReviewStep';\nimport StepIndicator from './StepIndicator';\n\nconst MultiStepForm = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({});\n\n  const steps = [\n    { id: 1, title: 'Personal Info', component: PersonalInfoStep },\n    { id: 2, title: 'Contact Info', component: ContactInfoStep },\n    { id: 3, title: 'File Upload', component: FileUploadStep },\n    { id: 4, title: 'Preferences', component: PreferencesStep },\n    { id: 5, title: 'Review', component: ReviewStep },\n  ];\n\n  const validationSchemas = {\n    1: Yup.object({\n      firstName: Yup.string().required('First name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      dateOfBirth: Yup.date().required('Date of birth is required'),\n      gender: Yup.string().required('Gender is required'),\n    }),\n    2: Yup.object({\n      email: Yup.string().email('Invalid email').required('Email is required'),\n      phone: Yup.string().required('Phone number is required'),\n      address: Yup.string().required('Address is required'),\n      city: Yup.string().required('City is required'),\n      country: Yup.string().required('Country is required'),\n    }),\n    3: Yup.object({\n      // File validation will be handled in the component\n    }),\n    4: Yup.object({\n      newsletter: Yup.boolean(),\n      notifications: Yup.boolean(),\n      theme: Yup.string().required('Theme preference is required'),\n    }),\n  };\n\n  const handleNext = (values) => {\n    setFormData({ ...formData, ...values });\n    if (currentStep < steps.length) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = (values) => {\n    const finalData = { ...formData, ...values };\n    console.log('Form submitted:', finalData);\n    // TODO: Implement form submission\n    alert('Form submitted successfully! Check the console for data.');\n  };\n\n  const CurrentStepComponent = steps[currentStep - 1].component;\n\n  return (\n    <div className=\"container\">\n      <div className=\"form-container\">\n        <StepIndicator currentStep={currentStep} steps={steps} />\n        \n        <Formik\n          initialValues={formData}\n          validationSchema={validationSchemas[currentStep]}\n          onSubmit={currentStep === steps.length ? handleSubmit : handleNext}\n        >\n          {({ values, errors, touched, setFieldValue }) => (\n            <Form>\n              <CurrentStepComponent\n                values={values}\n                errors={errors}\n                touched={touched}\n                setFieldValue={setFieldValue}\n                formData={formData}\n              />\n              \n              <div className=\"form-actions\">\n                {currentStep > 1 && (\n                  <button\n                    type=\"button\"\n                    onClick={handlePrevious}\n                    className=\"btn btn-secondary\"\n                  >\n                    Previous\n                  </button>\n                )}\n                \n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                >\n                  {currentStep === steps.length ? 'Submit' : 'Next'}\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default MultiStepForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}