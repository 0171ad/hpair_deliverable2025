{"ast":null,"code":"import _objectSpread from\"/workspaces/hpair_deliverable2025/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Firebase service for form submissions\nimport{collection,addDoc,getDocs,query,orderBy,limit}from'firebase/firestore';import{db}from'../firebase/config';const COLLECTION_NAME='formSubmissions';// Submit form data to Firebase\nexport const submitForm=async formData=>{try{const docRef=await addDoc(collection(db,COLLECTION_NAME),_objectSpread(_objectSpread({},formData),{},{submittedAt:new Date(),timestamp:Date.now()}));console.log('Form submitted successfully with ID:',docRef.id);return{success:true,id:docRef.id,message:'Form submitted successfully!'};}catch(error){console.error('Error submitting form:',error);return{success:false,message:'Failed to submit form. Please try again.'};}};// Get all form submissions (for admin viewing)\nexport const getFormSubmissions=async function(){let limitCount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;try{const q=query(collection(db,COLLECTION_NAME),orderBy('submittedAt','desc'),limit(limitCount));const querySnapshot=await getDocs(q);const submissions=[];querySnapshot.forEach(doc=>{submissions.push(_objectSpread({id:doc.id},doc.data()));});return{success:true,data:submissions};}catch(error){console.error('Error fetching submissions:',error);return{success:false,message:'Failed to fetch submissions'};}};// Get form submission count\nexport const getSubmissionCount=async()=>{try{const querySnapshot=await getDocs(collection(db,COLLECTION_NAME));return{success:true,count:querySnapshot.size};}catch(error){console.error('Error getting submission count:',error);return{success:false,message:'Failed to get submission count'};}};const firebaseService={submitForm,getFormSubmissions,getSubmissionCount};export default firebaseService;","map":{"version":3,"names":["collection","addDoc","getDocs","query","orderBy","limit","db","COLLECTION_NAME","submitForm","formData","docRef","_objectSpread","submittedAt","Date","timestamp","now","console","log","id","success","message","error","getFormSubmissions","limitCount","arguments","length","undefined","q","querySnapshot","submissions","forEach","doc","push","data","getSubmissionCount","count","size","firebaseService"],"sources":["/workspaces/hpair_deliverable2025/src/services/firebaseService.js"],"sourcesContent":["// Firebase service for form submissions\nimport { collection, addDoc, getDocs, query, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../firebase/config';\n\nconst COLLECTION_NAME = 'formSubmissions';\n\n// Submit form data to Firebase\nexport const submitForm = async (formData) => {\n  try {\n    const docRef = await addDoc(collection(db, COLLECTION_NAME), {\n      ...formData,\n      submittedAt: new Date(),\n      timestamp: Date.now()\n    });\n    \n    console.log('Form submitted successfully with ID:', docRef.id);\n    return { \n      success: true, \n      id: docRef.id,\n      message: 'Form submitted successfully!' \n    };\n  } catch (error) {\n    console.error('Error submitting form:', error);\n    return { \n      success: false, \n      message: 'Failed to submit form. Please try again.' \n    };\n  }\n};\n\n// Get all form submissions (for admin viewing)\nexport const getFormSubmissions = async (limitCount = 50) => {\n  try {\n    const q = query(\n      collection(db, COLLECTION_NAME), \n      orderBy('submittedAt', 'desc'), \n      limit(limitCount)\n    );\n    \n    const querySnapshot = await getDocs(q);\n    const submissions = [];\n    \n    querySnapshot.forEach((doc) => {\n      submissions.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    \n    return { \n      success: true, \n      data: submissions \n    };\n  } catch (error) {\n    console.error('Error fetching submissions:', error);\n    return { \n      success: false, \n      message: 'Failed to fetch submissions' \n    };\n  }\n};\n\n// Get form submission count\nexport const getSubmissionCount = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, COLLECTION_NAME));\n    return { \n      success: true, \n      count: querySnapshot.size \n    };\n  } catch (error) {\n    console.error('Error getting submission count:', error);\n    return { \n      success: false, \n      message: 'Failed to get submission count' \n    };\n  }\n};\n\nconst firebaseService = {\n  submitForm,\n  getFormSubmissions,\n  getSubmissionCount\n};\n\nexport default firebaseService;\n"],"mappings":"sHAAA;AACA,OAASA,UAAU,CAAEC,MAAM,CAAEC,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,KAAQ,oBAAoB,CACvF,OAASC,EAAE,KAAQ,oBAAoB,CAEvC,KAAM,CAAAC,eAAe,CAAG,iBAAiB,CAEzC;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC5C,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAT,MAAM,CAACD,UAAU,CAACM,EAAE,CAAEC,eAAe,CAAC,CAAAI,aAAA,CAAAA,aAAA,IACtDF,QAAQ,MACXG,WAAW,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvBC,SAAS,CAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EACtB,CAAC,CAEFC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAEP,MAAM,CAACQ,EAAE,CAAC,CAC9D,MAAO,CACLC,OAAO,CAAE,IAAI,CACbD,EAAE,CAAER,MAAM,CAACQ,EAAE,CACbE,OAAO,CAAE,8BACX,CAAC,CACH,CAAE,MAAOC,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,CACLF,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,0CACX,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,kBAAkB,CAAG,cAAAA,CAAA,CAA2B,IAApB,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACtD,GAAI,CACF,KAAM,CAAAG,CAAC,CAAGxB,KAAK,CACbH,UAAU,CAACM,EAAE,CAAEC,eAAe,CAAC,CAC/BH,OAAO,CAAC,aAAa,CAAE,MAAM,CAAC,CAC9BC,KAAK,CAACkB,UAAU,CAClB,CAAC,CAED,KAAM,CAAAK,aAAa,CAAG,KAAM,CAAA1B,OAAO,CAACyB,CAAC,CAAC,CACtC,KAAM,CAAAE,WAAW,CAAG,EAAE,CAEtBD,aAAa,CAACE,OAAO,CAAEC,GAAG,EAAK,CAC7BF,WAAW,CAACG,IAAI,CAAArB,aAAA,EACdO,EAAE,CAAEa,GAAG,CAACb,EAAE,EACPa,GAAG,CAACE,IAAI,CAAC,CAAC,CACd,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CACLd,OAAO,CAAE,IAAI,CACbc,IAAI,CAAEJ,WACR,CAAC,CACH,CAAE,MAAOR,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,MAAO,CACLF,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,6BACX,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAc,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CAC5C,GAAI,CACF,KAAM,CAAAN,aAAa,CAAG,KAAM,CAAA1B,OAAO,CAACF,UAAU,CAACM,EAAE,CAAEC,eAAe,CAAC,CAAC,CACpE,MAAO,CACLY,OAAO,CAAE,IAAI,CACbgB,KAAK,CAAEP,aAAa,CAACQ,IACvB,CAAC,CACH,CAAE,MAAOf,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,MAAO,CACLF,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,gCACX,CAAC,CACH,CACF,CAAC,CAED,KAAM,CAAAiB,eAAe,CAAG,CACtB7B,UAAU,CACVc,kBAAkB,CAClBY,kBACF,CAAC,CAED,cAAe,CAAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}